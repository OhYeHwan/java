package ch6;

// ch6-38 ~ 41
public class Ex6_8 {
}

class InitTest {
    int x; // 멤버변수는
    int y; // 자동초기화 된다.

    static int i; // 클래스변수는
    static int j; // 자동초기화 된다.

    //      자료형              기본값
    //     boolean            false
    //      char             '\u0000'
    //   byte,short,int         0
    //      long                0L
    //      float               0.0f
    //      double          0.0d or 0.0
    //      참조형               null


    void method1() {
        int i = 0; // 지역변수는
        int j = 0; // 수동 초기화 해야함(사용전 꼭!!!)
    }
}

// 멤버변수의 초기화
// 1. 명시적 초기화(=) / 간단 초기화
class ExplicitInit {
    int door = 4; // 기본형 변수(primitive)의 초기화
    InitTest i = new InitTest(); // 참조형(reference) 변수의 초기화
    // InitTest i; 는 참조변수만 선언한것이므로 null 값이 저장된다.
}
// 2. 초기화 블럭  / 복잡한 초기화
//    - 인스턴스 초기화 블럭 : {}
//    - 클래스 초기화 블럭  : static {}
// 3. 생성자(iv 초기화)
// 클래스변수 초기화 시점 : 클래스가 처음 로딩될 때 단 한번
// 인스턴스변수 초기화 시점 : 인스턴스가 생성될 때 마다


// -------------------------------------------

class InitOrder {
    static int cv = 1; // 명시적 초기화
    int iv = 1;  // 명시적 초기화 = 간단 초기화

    static { cv = 2; } ; // 클래스 초기화 블럭
    { iv = 2; } // 인스턴스 초기화 블럭

    InitOrder() { // 생성자초기화
        iv = 3;
    }
}
// 가장 먼저 static(클래스) 변수들이 초기화되고
// 그 뒤에 인스턴스 변수들이 초기화 된다.

// 그 안에서 초기화 순서는
// 기본값 -> 명시적초기화(=) -> 초기화블럭 -> 생성자 순서이다.

// 1. 클래스 기본값 자동 초기화(0 값 대입)
// 2. 클래스 명시적 초기화 (간단초기화)
// 3. 클래스 초기화 블럭 (복잡초기화)
// 4. 인스턴스 기본값 자동 초기화 (0 값 대입)
// 5. 인스턴스 명시적 초기화 (간단초기화)
// 6. 인스턴스 초기화 블럭 (복잡초기화)
// 7. 인스턴스 생성자 (복잡초기화)
